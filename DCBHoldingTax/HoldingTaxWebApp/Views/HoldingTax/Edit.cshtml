@model HoldingTaxWebApp.Models.Tax.HoldingTax

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Sheets{
    <style>
        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
    </style>
}

<div class="subheader py-2 py-lg-6 subheader-transparent" id="kt_subheader">
    <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <div class="d-flex align-items-center flex-wrap mr-1">
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <h5 class="text-dark font-weight-bold my-1 mr-5">গৃহকরের তথ্য</h5>
                <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                    <li class="breadcrumb-item text-muted">
                        @*<a href="#" class="text-muted">গৃহকরের তথ্য পরিবর্তন</a>*@
                    </li>
                </ul>
            </div>
        </div>
        <div class="d-flex align-items-center">
            <a onclick="return goBack();" class="btn btn-light-primary font-weight-bolder btn-sm"><i class="fas fa-arrow-left"></i>Back</a>
        </div>
    </div>
</div>

<div class="d-flex flex-column-fluid">
    <div class="container">
        <div class="row">
            <div class="col-md-12">

                <div class="card card-custom gutter-b example example-compact">
                    <div class="card-header">
                        <h3 class="card-title">গৃহকরের তথ্য পরিবর্তন</h3>
                        <div class="card-toolbar">
                            <div class="example-tools justify-content-center">

                            </div>
                        </div>
                    </div>
                    <!--begin::Form-->
                    @using (Html.BeginForm("Edit", "HoldingTax", null, FormMethod.Post, new { @class = "form-signin", @id = "kt_form_2", role = "form" }))
                    {
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.HoldingTaxId)

                        <div class="card-body">

                            <div class="form-group row">
                                <label class="col-lg-2 col-form-label text-lg-right">Holder Name</label>
                                <div class="col-lg-4">
                                    @Html.EditorFor(model => model.HolderName, new { htmlAttributes = new { @class = "form-control border-0", placeholder = "", @readonly = "readonly" } })
                                </div>

                                <label class="col-lg-2 col-form-label text-lg-right">Financial Year</label>
                                <div class="col-lg-4">
                                    @Html.EditorFor(model => model.FinancialYear, new { htmlAttributes = new { @class = "form-control border-0", placeholder = "", @readonly = "readonly" } })
                                </div>


                            </div>

                            <div class="form-group row">

                                <label class="col-lg-2 col-form-label text-lg-right">Holder Details</label>
                                <div class="col-lg-10">
                                    @Html.EditorFor(model => model.AreaPlotFlatData, new { htmlAttributes = new { @class = "form-control border-0", placeholder = "", @readonly = "readonly" } })
                                </div>

                            </div>


                            <div class="form-group row">
                                <label class="col-lg-2 col-form-label text-lg-right">Rebate: <span id="RebatePercent"> &nbsp; @Model.RebatePercent (%)</span></label>
                                <div class="col-lg-1">
                                    <div class="radio-inline">
                                        @if (Model.Rebate > 0)
                                        {
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.RebateInfo, "Yes", new { @checked = "true" })
                                                <span></span>YES
                                            </label>
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.RebateInfo, "No", new { @class = "rebate_change_no" })
                                                <span></span>NO
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.RebateInfo, "Yes")
                                                <span></span>YES
                                            </label>
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.RebateInfo, "No", new { @checked = "true", @class = "rebate_change_no" })
                                                <span></span>NO
                                            </label>
                                        }
                                    </div>
                                    @*<span class="form-text text-muted">Please select user group</span>*@
                                </div>
                                <div class="col-lg-3">
                                    @Html.EditorFor(model => model.Rebate, new { htmlAttributes = new { @class = "form-control", placeholder = "", @readonly = "readonly" } })
                                </div>

                                <label class="col-lg-2 col-form-label text-lg-right">Is Finalised:</label>
                                <div class="col-lg-1">
                                    <div class="radio-inline">
                                        @if (Model.isFinalized == true)
                                        {
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.FinalizeInfo, "Yes", new { @checked = "true" })
                                                <span></span>YES
                                            </label>
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.FinalizeInfo, "No")
                                                <span></span>NO
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.FinalizeInfo, "Yes")
                                                <span></span>YES
                                            </label>
                                            <label class="radio radio-solid">
                                                @Html.RadioButtonFor(model => model.FinalizeInfo, "No", new { @checked = "true" })
                                                <span></span>NO
                                            </label>
                                        }
                                    </div>
                                </div>

                            </div>

                            <div class="form-group row">
                                <label class="col-lg-2 col-form-label text-lg-right">Wrong Information Charge: <span id="WrongInfoChargePercent">&nbsp;@Model.WrongInfoChargePercent  (%)</span></label>
                                <div class="col-lg-1">
                                    <div class="radio-inline">
                                        <div class="radio-inline">
                                            @if (Model.WrongInfoCharge > 0)
                                            {
                                                <label class="radio radio-solid">
                                                    @Html.RadioButtonFor(model => model.WrongInfo, "Yes", new { @checked = "true" })
                                                    <span></span>YES
                                                </label>
                                                <label class="radio radio-solid">
                                                    @Html.RadioButtonFor(model => model.WrongInfo, "No")
                                                    <span></span>NO
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="radio radio-solid">
                                                    @Html.RadioButtonFor(model => model.WrongInfo, "Yes")
                                                    <span></span>YES
                                                </label>
                                                <label class="radio radio-solid">
                                                    @Html.RadioButtonFor(model => model.WrongInfo, "No", new { @checked = "true" })
                                                    <span></span>NO
                                                </label>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    @Html.EditorFor(model => model.WrongInfoCharge, new { htmlAttributes = new { @class = "form-control", placeholder = "", @readonly = "readonly" } })
                                </div>

                            </div>

                            <div class="form-group row">
                                <label class="col-lg-3 col-form-label text-lg-right">Paid Amount:</label>
                                <div class="col-lg-3">
                                    @Html.EditorFor(model => model.PaidAmount, new { htmlAttributes = new { @class = "form-control your_class", placeholder = "" } })
                                    @*<span class="form-text text-muted">Please enter your full name</span>*@
                                </div>
                                <label class="col-lg-2 col-form-label text-lg-right">Net Payable Tax Amount:</label>
                                <div class="col-lg-3">
                                    @Html.EditorFor(model => model.SubTotalHoldingTax, new { htmlAttributes = new { @class = "form-control", placeholder = "", @readonly = "readonly" } })
                                    @*<span class="form-text text-muted">Please enter your contact number</span>*@
                                </div>
                            </div>

                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-lg-2"></div>
                                <div class="col-lg-8 text-center">
                                    <button type="submit" class="btn btn-outline-success btn-md"><i class="fas fa-pencil-alt"></i>হালনাগাদ করুন</button>
                                    @*  <button type="submit" class="btn btn-success mr-2">Submit</button>*@
                                    <button type="button" onclick="window.location.href = '/HoldingTax/Index'" class="btn btn-outline-dark btn-md"><i class="fas fa-arrow-left"></i>মূল তালিকায় ফিরে যান</button>
                                </div>
                                <div class="col-lg-2"></div>
                            </div>
                        </div>
                    }
                    <!--end::Form-->
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        jQuery(document).ready(function () {

            //var invalidChars = ["-", "e", "+", "E"];
            //$(".your_class").on("keydown", function (e) {
            //    if (invalidChars.includes(e.key)) {
            //        e.preventDefault();
            //    }
            //});

            $("#kt_form_2").validate({
                rules: {
                    PaidAmount: {
                        number: true
                    }
                },

                invalidHandler: function (event, validator) {
                    KTUtil.scrollTop();
                }
            });

            $('input[type=radio][name=RebateInfo]').change(function () {
                if (this.value === 'Yes') {
                    //$("#RebatePercent").text("");
                    $("#Rebate").val("");
                    var holdingTaxId = parseInt($('#HoldingTaxId').val());
                    var json = {
                        id: holdingTaxId,
                    };
                    $.ajax({
                        url: '/HoldingTax/GetRebateAndWrongInfoByHoldingTaxId',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {
                            ///  $("#RebatePercent").text(data.RebatePercent + "%");
                            $("#Rebate").val(data.RebateValue.toFixed(2));
                            var subTotal = $("#SubTotalHoldingTax").val();
                            var minusValue = data.RebateValue.toFixed(2);
                            var exactValue = subTotal - minusValue;
                            $("#SubTotalHoldingTax").val(exactValue.toFixed(2));
                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                }
                else if (this.value === 'No') {
                    var subTotal = $("#SubTotalHoldingTax").val();
                    var minusValue = $("#Rebate").val();
                    var exactValue = parseFloat(subTotal) + parseFloat(minusValue);
                    $("#SubTotalHoldingTax").val(exactValue.toFixed(2));
                    $("#Rebate").val("0");
                }
            });

            $('input[type=radio][name=WrongInfo]').change(function () {
                if (this.value === 'Yes') {
                    $("#WrongInfoCharge").val("");
                    var holdingTaxId = parseInt($('#HoldingTaxId').val());
                    var json = {
                        id: holdingTaxId,
                    };
                    $.ajax({
                        url: '/HoldingTax/GetRebateAndWrongInfoByHoldingTaxId',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        success: function (data) {
                            debugger;
                            //  $("#WrongInfoChargePercent").text(data.WrongInfoChargePercent + "%");
                            $("#WrongInfoCharge").val(data.WrongInfoChargeValue.toFixed(2));
                            var subTotal = $("#SubTotalHoldingTax").val();
                            var plusValue = data.WrongInfoChargeValue.toFixed(2);
                            var exactValue = parseFloat(subTotal) + parseFloat(plusValue);
                            $("#SubTotalHoldingTax").val(exactValue.toFixed(2));
                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                }
                else if (this.value === 'No') {
                    var subTotal = $("#SubTotalHoldingTax").val();
                    var plusValue = $("#WrongInfoCharge").val();
                    var exactValue = parseFloat(subTotal) - parseFloat(plusValue);
                    $("#SubTotalHoldingTax").val(exactValue.toFixed(2));
                    $("#WrongInfoCharge").val("0");
                }
            });


        });
    </script>
}
