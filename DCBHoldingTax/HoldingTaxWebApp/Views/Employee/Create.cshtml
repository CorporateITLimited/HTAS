@model HoldingTaxWebApp.Models.Users.Employee
@using HoldingTaxWebApp.Helpers
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Sheets{
    <link href="~/Content/FormDesign.css" rel="stylesheet" />
}

<!--begin::Card-->
<div class="card card-custom">

    <div class="row">
        <div class="col-lg-12">
            <div class="kt-portlet">
                <div class="kt-portlet__head">
                    <div class="kt-portlet__head-label">
                        <h3 class="kt-portlet__head-title">
                            Create Official
                        </h3>
                    </div>
                </div>
                @using (Html.BeginForm("Create", "Employee", null, FormMethod.Post, new { @class = "form-signin", @id = "kt_form_2", role = "form" }))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.AntiForgeryToken()

                    <div class="kt-portlet__body">
                        <div class="kt-section">
                            <div class="kt-section__content">

                                <fieldset>
                                    <legend>General Information</legend>
                                    <div class="row m-2">
                                        <div class="col-sm-4 col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @name = "EmployeeName", placeholder = "Official's Name", @id = "EmployeeName" } })
                                                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DesignationId, htmlAttributes: new { @class = "" })
                                                @Html.DropDownListFor(model => model.DesignationId, null, "-- Select Designation --", new
                                           {
                                               @class = "form-control",
                                               @name = "DesignationId",
                                               @id = "DesignationId"
                                           })

                                            </div>




                                        </div>
                                        <div class="col-sm-4 col-lg-4">

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @name = "FatherName", placeholder = "Father's Name", @id = "FatherName" } })
                                                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @name = "MotherName", placeholder = "Mother's Name", @id = "MotherName" } })
                                                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-sm-4 col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "" })

                                                <select class="form-control" id="Sex" name="Sex">
                                                    <option value="Male">Male</option>
                                                    <option value="Female">Female</option>
                                                    <option value="Others">Others</option>
                                                </select>
                                                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.StringDOB, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.StringDOB, new { htmlAttributes = new { @class = "form-control", @name = "StringDOB", placeholder = "Date Of Birth", @id = "StringDOB" } })
                                                @Html.ValidationMessageFor(model => model.StringDOB, "", new { @class = "text-danger" })
                                            </div>

                                        </div>

                                    </div>

                                    <legend>Contact Information</legend>
                                    <div class="row m-2">
                                        <div class="col-sm-4 col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @name = "ContactNo", placeholder = "Contact No", @id = "ContactNo" } })
                                                @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @name = "Email", placeholder = "Email", @id = "Email" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>



                                        </div>
                                        <div class="col-sm-4 col-lg-4">

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EmployeeAddress, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.EmployeeAddress, new { htmlAttributes = new { @class = "form-control", @name = "EmployeeAddress", placeholder = "Address", @id = "EmployeeAddress" } })
                                                @Html.ValidationMessageFor(model => model.EmployeeAddress, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NID, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.NID, new { htmlAttributes = new { @class = "form-control", @name = "NID", placeholder = "NID", @id = "NID" } })
                                                @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                                            </div>



                                        </div>
                                        <div class="col-sm-4 col-lg-4">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "" })
                                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @name = "Remarks", placeholder = "Remarks", @id = "Remarks" } })
                                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                            </div>

                                        </div>

                                    </div>

                                    <br />
                                </fieldset>

                            </div>
                        </div>
                    </div>


                    <div class="kt-form__actions kt-portlet__foot">
                        <div class="row mt-2">
                            <div class="col-lg-12">
                                <div class="col-lg-12 text-center">
                                    @*@if ((Convert.ToString(Session[CommonConstantHelper.RoleName]) == CommonConstantHelper.RoleAdmin) ||
                                        (Convert.ToString(Session[CommonConstantHelper.RoleName]) == CommonConstantHelper.RoleManagement))
                                                                                    {
                                                                                        <button type="submit" class="btn btn-outline-success btn-lg">Create</button>
                                                                                        <input type="button" onclick="window.location.href = '/Employee/Index'" class="btn btn-outline-dark btn-lg" value="Back to List" />
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <input type="button" onclick="window.location.href = '/Employee/Index'" class="btn btn-outline-dark btn-lg" value="Back to List" />
                                                                                    }*@

                                    <button type="submit" class="btn btn-outline-success btn-md"><i class="fas fa-plus"></i>Create</button>


                                    <button type="button" onclick="window.location.href = '/Employee/Index'" class="btn btn-outline-dark btn-md"><i class="fas fa-arrow-left"></i>Back to List</button>

                                </div>
                            </div>
                        </div>
                    </div>



                }

            </div>
        </div>
    </div>
</div>



@section Scripts {

    <script>
        jQuery(document).ready(function () {

            $('#DesignationId').select2({
                placeholder: "-- Select Designation --",
                allowClear: true
            });

            $('#Sex').select2({
                placeholder: "-- Select Sex --",
                allowClear: true
            });

            $('#StringDOB').datepicker({
                rtl: KTUtil.isRTL(),
                todayBtn: "linked",
                clearBtn: true,
                todayHighlight: true,
                format: "dd/mm/yyyy",
                autoclose: true
            });

            $("#kt_form_2").validate({
                rules: {
                    EmployeeName: {
                        required: true
                    },
                    DesignationId: {
                        required: true
                    }
                },

                invalidHandler: function (event, validator) {
                    KTUtil.scrollTop();
                }
            });

        });
    </script>
}
